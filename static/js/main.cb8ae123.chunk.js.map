{"version":3,"sources":["utils.js","FieldRenderer/index.js","FieldRenderer/DropDown.js","FieldRenderer/Text.js","FieldRenderer/Rows.js","FieldRenderer/Calculated.js","submit.js","config.js","App.js","reportWebVitals.js","index.js"],"names":["treeMap","func","tree","newTree","result","Array","isArray","key","adjust","index","arr","copy","remove","splice","fieldRenderers","select","fieldProps","options","error","FormControl","fullWidth","InputLabel","label","Select","map","o","MenuItem","value","FormHelperText","text","TextField","helperText","rows","elements","onChange","Grid","container","spacing","row","i","setRow","updateRow","target","item","field","xs","sm","columns","state","setState","name","Button","sx","width","height","onClick","calculated","formatter","x","Typography","Field","type","props","showWhen","Input","e","s","undefined","isVisible","isInvalid","some","el","addValidationErrors","fields","reduce","newRows","fieldsToStr","filter","join","submit","f","hasValidationErrors","date","Date","toLocaleString","fieldStr","body","encodeURIComponent","window","open","dollars","val","Number","fieldConfig","multiline","setAccounts","setFields","setLoading","a","fetch","response","accounts","split","n","App","useState","loading","res","useEffect","total","list","sum","Total","setTotal","Box","display","justifyContent","CircularProgress","p","variant","style","position","right","bottom","font","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb8ae123.chunk.js","sourcesContent":["export const treeMap = (func, tree) => {\n  const newTree = func(tree);\n  if (!newTree || typeof newTree !== \"object\") return newTree;\n\n  const result = Array.isArray(newTree) ? [] : {};\n  for (const key in newTree) {\n    result[key] = treeMap(func, newTree[key]);\n  }\n  return result;\n};\n\nexport const adjust = (index, func, arr) => {\n  const copy = [...arr];\n  copy[index] = func(copy[index]);\n  return copy;\n};\n\nexport const remove = (index, arr) => {\n  const copy = [...arr];\n  copy.splice(index, 1);\n  return copy;\n};\n","import React from \"react\";\nimport { RowsRender } from \"./Rows\";\nimport { Dropdown } from \"./DropDown\";\nimport { Text } from \"./Text\";\nimport { Calculated } from \"./Calculated\";\n\nconst fieldRenderers = {\n  select: Dropdown,\n  text: Text,\n  rows: RowsRender,\n  calculated: Calculated,\n};\n\nexport const Field = ({\n  field: { name, type, props, options, showWhen, elements, formatter },\n  state,\n  setState,\n}) => {\n  if (showWhen && !showWhen(state)) return null;\n  const Input = fieldRenderers[type] || fieldRenderers.text;\n  const fieldProps = {\n    label: name,\n    value: state[name] ?? \"\",\n    onChange: (e) =>\n      setState((s) => ({\n        ...s,\n        [name]: e.target.value,\n        [name + \"Error\"]: undefined,\n      })),\n    ...props,\n  };\n  const error = state[name + \"Error\"];\n\n  return <Input {...{ fieldProps, options, error, elements, formatter }} />;\n};\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n} from \"@mui/material\";\n\nexport const Dropdown = ({ fieldProps, options, error }) => (\n  <FormControl fullWidth error={!!error}>\n    <InputLabel>{fieldProps.label}</InputLabel>\n    <Select {...fieldProps}>\n      {options.map((o) => (\n        <MenuItem key={o} value={o}>\n          {o}\n        </MenuItem>\n      ))}\n    </Select>\n    {error && <FormHelperText>{error}</FormHelperText>}\n  </FormControl>\n);\n","import React from \"react\";\nimport { TextField } from \"@mui/material\";\n\nexport const Text = ({ error, fieldProps }) => (\n  <TextField fullWidth error={!!error} helperText={error} {...fieldProps} />\n);\n","import React from \"react\";\nimport { Button, Grid } from \"@mui/material\";\nimport { Field } from \".\";\nimport { adjust, remove } from \"../utils\";\n\nexport const RowsRender = ({ elements, fieldProps: { value, onChange } }) => {\n  const addRow = () => onChange({ target: { value: [...value, {}] } });\n  const deleteRow = (index) =>\n    onChange({ target: { value: remove(index, value) } });\n\n  return (\n    <>\n      <Grid container spacing={1}>\n        {value.map((row, i) => {\n          const setRow = (updateRow) => {\n            onChange({ target: { value: adjust(i, updateRow, value) } });\n          };\n          return (\n            <Grid container item key={i} spacing={1}>\n              {elements.map((field) => (\n                <Grid key={field.name} item xs={12} sm={field.columns}>\n                  <Field field={field} state={row} setState={setRow} />\n                </Grid>\n              ))}\n              <Grid item sm={1}>\n                {i ? (\n                  <Button\n                    sx={{ width: \"100%\", height: \"100%\" }}\n                    onClick={() => deleteRow(i)}\n                  >\n                    Delete\n                  </Button>\n                ) : null}\n              </Grid>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      <Button onClick={addRow}>Add Row</Button>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport const Calculated = ({\n  fieldProps: { label, value },\n  formatter = (x) => x,\n}) => (\n  <Typography>\n    <strong>\n      {label}: {formatter(value)}\n    </strong>\n  </Typography>\n);\n","const isVisible = (showWhen, state) => !showWhen || showWhen(state);\n\nconst isInvalid = ({ name, showWhen, elements }, state) =>\n  isVisible(showWhen, state) &&\n  (!state[name] ||\n    (elements &&\n      state[name].some((row) => elements.some((el) => isInvalid(el, row)))));\n\nconst hasValidationErrors = (state, fields) =>\n  fields.some((f) => isInvalid(f, state));\n\nconst addValidationErrors = (state, fields) =>\n  fields.reduce((state, field) => {\n    if (field.elements) {\n      const newRows = state[field.name]?.map((row) =>\n        addValidationErrors(row, field.elements)\n      );\n      return { ...state, [field.name]: newRows };\n    }\n    return {\n      ...state,\n      [field.name + \"Error\"]: isInvalid(field, state) && \"Required\",\n    };\n  }, state);\n\nconst fieldsToStr = (fields, state) =>\n  fields\n    .filter((field) => isVisible(field.showWhen, state))\n    .map(({ elements, name, formatter = (x) => x }) =>\n      elements\n        ? state[name]\n            .map((row) => `\\r\\n${fieldsToStr(elements, row)}\\r\\n`)\n            .join(\"\")\n        : `${name}: ${(formatter || ((x) => x))(state[name] || \"\")}`\n    )\n    .join(\"\\r\\n\");\n\nexport const submit = (fields, state, setState) => {\n  if (hasValidationErrors(state, fields)) {\n    setState((state) => addValidationErrors(state, fields));\n    return;\n  }\n  const date = new Date().toLocaleString();\n  const fieldStr = fieldsToStr(fields, state);\n  const body = encodeURIComponent(\n    `Date: ${date}\\r\\n${fieldStr}\\r\\n\\r\\nREMINDER: Attach relevant files.`\n  );\n  window.open(\n    `mailto:checkrequest@chathambiblechurch.org?cc=chathamit@chathambiblechurch.org&subject=Check Request&body=${body}`\n  );\n};\n","const dollars = (val) => \"$\" + Number(val).toLocaleString();\n\nexport const fieldConfig = [\n  { name: \"Requestor Name\", type: \"text\" },\n  { name: \"Make Check Payable To\", type: \"text\" },\n  {\n    name: \"list\",\n    type: \"rows\",\n    elements: [\n      { name: \"Account\", columns: 4, type: \"select\", options: [] },\n      { name: \"Explanation\", columns: 5, props: { multiline: true } },\n      {\n        name: \"Dollar Amount\",\n        columns: 2,\n        props: { type: \"number\" },\n        formatter: dollars,\n      },\n    ],\n  },\n  { name: \"Total\", type: \"calculated\", formatter: dollars },\n  {\n    name: \"Check Delivery\",\n    type: \"select\",\n    options: [\n      \"Mail Check\",\n      \"Give Check to Requestor\",\n      \"Place Check in Requestor's Folder\",\n    ],\n  },\n  {\n    name: \"Address\",\n    type: \"text\",\n    showWhen: (s) => s[\"Check Delivery\"] === \"Mail Check\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Typography, Button, CircularProgress } from \"@mui/material\";\nimport { Field } from \"./FieldRenderer/index.js\";\nimport { submit } from \"./submit.js\";\nimport { fieldConfig } from \"./config.js\";\nimport { treeMap } from \"./utils.js\";\n\n/* \nPossible Future Features: \n- Send to Ministry Leader for approval when total > $250\n\n*/\n\nconst setTotal = (state, setState) => {\n  const total = state.list.reduce(\n    (sum, row) => sum + Number(row[\"Dollar Amount\"] ?? 0),\n    0\n  );\n  useEffect(() => {\n    setState((s) => ({ ...s, Total: total }));\n  }, [total]);\n};\n\nconst setAccounts = async (setFields, setLoading) => {\n  const response = await fetch(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSKMEpvYGCrwfob-IwuiYWb-im8oTCtYxtj9Uet9rc3jKzSU65t7UU1ssxeY_JcrmSQhDQ_NdnKNE7A/pub?output=tsv\"\n  );\n  const text = await response.text();\n  const accounts = text?.split(\"\\n\");\n  setFields((fields) =>\n    treeMap(\n      (n) => (n?.name === \"Account\" ? { ...n, options: accounts } : n),\n      fields\n    )\n  );\n  setLoading(false);\n};\n\nexport default function App() {\n  const [loading, setLoading] = useState(true);\n  const [state, setState] = useState(\n    fieldConfig.reduce((res, { type, name }) => {\n      if (type === \"rows\") res[name] = [{}];\n      return res;\n    }, {})\n  );\n  const [fields, setFields] = useState(fieldConfig);\n\n  useEffect(() => {\n    setAccounts(setFields, setLoading);\n  }, []);\n\n  setTotal(state, setState);\n\n  return loading ? (\n    <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n      <CircularProgress />\n    </Box>\n  ) : (\n    <>\n      <Typography p={1} variant=\"h4\">\n        Check Request Form\n      </Typography>\n\n      {fields.map((field) => (\n        <Box key={field.name} p={1}>\n          <Field {...{ field, state, setState }} />\n        </Box>\n      ))}\n\n      <Typography p={1}>\n        Pressing &quot;Submit&quot; will create an email ready to be sent.\n      </Typography>\n\n      <Typography p={1}>\n        <strong>\n          Please attach any necessary documents or receipts to the email before\n          sending.\n        </strong>\n      </Typography>\n\n      <Box p={1}>\n        <Button\n          variant=\"contained\"\n          onClick={() => submit(fields, state, setState)}\n        >\n          Submit\n        </Button>\n      </Box>\n\n      <Typography p={1}>\n        When you have sent the email, you may close this page.\n      </Typography>\n\n      <a\n        style={{\n          position: \"fixed\",\n          right: 2,\n          bottom: 2,\n          font: \"12px sans-serif\",\n        }}\n        href=\"mailto:chathamit@chathambiblechurch.org?subject=Check Request Bug Report\"\n      >\n        Report a Problem\n      </a>\n    </>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}